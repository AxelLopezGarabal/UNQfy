<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>424</x>
      <y>248</y>
      <w>408</w>
      <h>776</h>
    </coordinates>
    <panel_attributes>UNQfy
--
_entitiesRepository
_nextId
--
constructor(entitiesRepository)
-------------------------------------------

_generateUniqueId()

/* ENTIDADES */
playlists()
artists()
albums()
tracks(

/* USER */
addUser({name})
registerListening(userId, trackId)

/* ARTIST */
addArtist({name, country})
removeArtist(artistId)
existsArtistWithId(id)
existSomeoneCalled(aName)
_getAuthorOfAlbum(anAlbum)
getAuthorOfTrack(aTrack)

/* ALBUM */
addAlbum(artistId, {name, year})
removeAlbum(albumId)
_getAlbumContaining(aTrack)

/* TRACK */
addTrack(albumId, {name, duration, genres})
removeTrack(trackId)

/* PLAYLIST */
createPlaylistFor(userId, playlistName, genresToInclude, maxDuration)
createPlaylist(name, genresToInclude, maxDuration)
removePlaylist(playlistId)
_removeFromAllPlaylists(tracks)

/** BUSQUEDAS **/
searchByName(aName)
searchByNamePartial(aPartialName)

getArtistById(id)
getAlbumById(id)
getTrackById(id)
getPlaylistById(id)
getUserById(id)

getArtistByName(aName)

getTracksMatchingGenres(genres)
getTracksMatchingArtist(artistName)
getTracksMatchingArtistName(artistName)

findBy(entityName, {prop, value})
filterAllBy({prop, value})</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>248</y>
      <w>280</w>
      <h>408</h>
    </coordinates>
    <panel_attributes>EntitiesRepository 
--
_artists
_users
_playlists
--
constructor(artists, users, playlists)
-------------------------------------------------

artists()
albums()
tracks()
users()
playlists()

_entities(entityName)

add(entityName, anEntity)
removeBy(entityName, {prop, value})
removeFromAllPlaylist(tracks)

find(entityName, aPredicate, errorMessage)
findBy(entityName, {prop, value})

filterAllBy({prop, value})
filter(entityName, aPredicate)
filterBy(entityName, {prop, value})
filterAll(aPredicate)

someHas(entityName, {prop, value})

forEach(entityName, aFunction)

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>824</x>
      <y>272</y>
      <w>72</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1552</x>
      <y>248</y>
      <w>224</w>
      <h>304</h>
    </coordinates>
    <panel_attributes>Album
--
_id
_name
_year
_tracks
--
constructor({id, name, year, tracks})
--------------------------------------------------

id()
name()
year()
tracks()

set name(newName)

hasTrack(aTrack)
hasTrackNamed(aName)

addTrack(aTrack)
removeTrack(aTrack)

_validateIsNewTrack(aTrack)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1216</x>
      <y>248</y>
      <w>264</w>
      <h>768</h>
    </coordinates>
    <panel_attributes>Artist
--
_id
_name
_country
_albums
_followers
_othersListeningsOfHisArt
--
constructor({id, name, country})
----------------------------------------------

isTheAuthorOfAlbum(anAlbum)

isTheAuthorOfTrack(aTrack)

isFollowedBy(aUser)

id()
name()
country()
albums()
followers()
allTracks()
othersListeningsOfHisArt()

set name(newName)
set albums(newalbums)

/* ALBUMS */
addAlbum(anAlbum)

removeAlbum(anAlbum)

findAlbum(aPredicate)
findAlbumById(albumId)
findAlbumByName(albumName)

/* TRACKS */
addTrackTo(anAlbum, aTrack)

removeTrack(aTrack)

/* FOLLOWERS */
addFollower(aUser)
registerOthersListeningsOfHisArt(aListening)

/* PRIVATE */
/* ALBUM */
_validateisTheAuthorOfAlbum(anAlbum)

_validateNewAlbum(anAlbum)

_hasAlbumCalled(aName)

/* FOLLOWERS */
_notifyAll(aNotification)

_validateNewFollower(aUser)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1472</x>
      <y>280</y>
      <w>96</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1152</x>
      <y>272</y>
      <w>80</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1816</x>
      <y>248</y>
      <w>296</w>
      <h>248</h>
    </coordinates>
    <panel_attributes>Track
--
_id
_name
_duration
_genres
--
constructor({ id, name, duration, genres })
----------------------------------------------------------

id()
name()
duration()
genres()

set name(newName)

matchGenre(aGenre)
matchSomeGenreFrom(genres)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1768</x>
      <y>272</y>
      <w>64</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1216</x>
      <y>1032</y>
      <w>264</w>
      <h>488</h>
    </coordinates>
    <panel_attributes>User
--
_id
_name
_notifications
_followings
_listenings
_playlists
--
constructor({ id, name })
----------------------------------- 

id()
name()
notifications()
listenings()
listenedTracks()
playlists()
followings()

hasListened(aTrack)
isFollowing(anArtist)

timesListened(aTrack)
mostListenedTracks(amountResults)

addToHistory(aListening)

registerPlaylist(aPlaylist)
removePlaylist(aPlaylist)

follow(anArtist)
addNotification(aNotification)

get _allListenedTracksInOrder()
_allListeneningsOf(aTrack)

_validateCanFollow(anArtist)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1152</x>
      <y>304</y>
      <w>80</w>
      <h>800</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>80.0;970.0;40.0;970.0;40.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1576</x>
      <y>1128</y>
      <w>264</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>Playlist
--
_id
_name
_tracks
--
constructor({ id, name, tracks })
----------------------------------------------

id()
name()
tracks()
duration()

set name(newName)

addTrack(aTrack)
addAllTracks(tracks)

hasTrack(aTrack)

removeTrack(aTrack)
removeAll(tracks)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1472</x>
      <y>1080</y>
      <w>120</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>130.0;100.0;80.0;100.0;80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1472</x>
      <y>952</y>
      <w>120</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>130.0;10.0;80.0;10.0;80.0;140.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1472</x>
      <y>312</y>
      <w>120</w>
      <h>656</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>130.0;790.0;80.0;790.0;80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>176</y>
      <w>368</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Terminal
--
_unqfy
_commands
_resultHandler
_errorHandler
--
constructor({unqfy, commands, resultHandler, errorHandler})
-----------------------------------------------------------------------------------------------------------------------------------

run(commandName, args)
_findCommand(commandName)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>360</x>
      <y>240</y>
      <w>80</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>80.0;50.0;30.0;50.0;30.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>424</x>
      <y>0</y>
      <w>224</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>Command
&lt;&lt; abstract &gt;&gt;
--
handle(unqfy, args)

_validate(args)
_excecute(unqfy, args)
_parse(argsToParse)

name()                   Abstract method
_arrange(args)        Hook method
_argsDescription()  Hook method

_argsNames()
_expectedNumberOfArgs()

_hasCorrectNumberOfArgs(args)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>360</x>
      <y>24</y>
      <w>80</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n </panel_attributes>
    <additional_attributes>80.0;10.0;30.0;10.0;30.0;230.0;10.0;230.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>688</x>
      <y>0</y>
      <w>192</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>ArgDescription
--
_name
_typeDescription
_validationRegex
_parseFunction
--
constructor({
  name,
  typeDescription,
  validationRegex,
  parseFunction = (x =&gt; x)
})
---------------------------
name()
parse(stringToParse)

_validate(stringToParse)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>640</x>
      <y>32</y>
      <w>64</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>664</y>
      <w>280</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>PlaylistGenerator
--
generate(
    id,
    playlistName,
    genresToInclude,
    maxDuration,
    tracksToChooseFrom)

_createEmptyPlaylist(id, name)

_doesNotExcedeMaxDurationAfterAddingTo(
    aPlaylist,
    aTrack,
    aDuration)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>824</x>
      <y>280</y>
      <w>72</w>
      <h>440</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>70.0;520.0;40.0;520.0;40.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>872</y>
      <w>280</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>EntityCreation
&lt;&lt;abstract&gt;&gt;
--
_unqfy
_dataObject
--
constructor(anUNQfy, dataObject)
-------------------------------------

handle()

_validateDataObject()   abstract method
_createObject()

_entityClass()                abstract method
_uniqueId()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1608</x>
      <y>104</y>
      <w>120</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>Entity
&lt;&lt; iterface &gt;&gt;
--
id()
name()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>640</x>
      <y>1136</y>
      <w>200</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>ArtistCreation
--
get _entityClass()
_validateDataObject()
_isArtistNameAlreadyRegister()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>728</x>
      <y>1072</y>
      <w>304</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>360.0;10.0;360.0;50.0;10.0;50.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>848</x>
      <y>1136</y>
      <w>144</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>AlbumCreation
--
_entityClass()
_validateDataObject()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>912</x>
      <y>1072</y>
      <w>120</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;130.0;50.0;10.0;50.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1000</x>
      <y>1136</y>
      <w>144</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>TrackCreation
--
_entityClass()
_validateDataObject()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>440</x>
      <y>1136</y>
      <w>192</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>UserCreation
--
_entityClass()
_validateDataObject()
_isUserNameAlreadyRegister()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>1072</y>
      <w>512</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>620.0;10.0;620.0;50.0;10.0;50.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1008</x>
      <y>1072</y>
      <w>88</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;90.0;50.0;90.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1656</x>
      <y>168</y>
      <w>24</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1344</x>
      <y>168</y>
      <w>336</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>400.0;10.0;400.0;50.0;10.0;50.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1656</x>
      <y>168</y>
      <w>320</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;380.0;50.0;380.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1472</x>
      <y>168</y>
      <w>680</w>
      <h>1312</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>240.0;10.0;240.0;50.0;830.0;50.0;830.0;1620.0;10.0;1620.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1656</x>
      <y>168</y>
      <w>496</w>
      <h>1000</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;600.0;50.0;600.0;1230.0;230.0;1230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1832</x>
      <y>280</y>
      <w>352</w>
      <h>912</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>340.0;10.0;420.0;10.0;420.0;1120.0;10.0;1120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>824</x>
      <y>288</y>
      <w>72</w>
      <h>656</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1..n</panel_attributes>
    <additional_attributes>70.0;790.0;30.0;790.0;30.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1472</x>
      <y>976</y>
      <w>120</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;170.0;60.0;170.0;60.0;10.0;130.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1776</x>
      <y>488</y>
      <w>80</w>
      <h>440</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>70.0;10.0;70.0;490.0;10.0;490.0;10.0;530.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1752</x>
      <y>544</y>
      <w>32</w>
      <h>384</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;460.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1472</x>
      <y>872</y>
      <w>280</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;330.0;10.0;330.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1576</x>
      <y>912</y>
      <w>264</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>Listening
--
_listener
_artist
_album
_track
--
constructor({listener, artist, album, track})
----------------------------------------------------------

listener()
artist()
album()
track()</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
